{"Variables":{"topic":"Variables","desc":"Contain reusable information in the form of numbers, strings, colors, booleans, nulls, lists","syntax":"$variable: value;","scss":"$myVar: 25px;\n$myStr: 'some text';\n$myColor: #00f;\n$myBool: false;\n$myVar: null;\n$myList: 2px 4px solid black;\n\np{color: $myColor;}","result":"p {color: #00f;}"},"Nesting":{"topic":"Nesting","desc":"Allows the use of selectors inside selectors","syntax":"selector {\nnested selector {\nnested selector {}\n}\n}\n}","scss":"nav {\np {color: red;}\na {\np{margin: 0px}\n&:hover {color: black;}\n}}","result":"nav p {color: red;}\nnav a p {margin: 0px;}\nnav a:hover {color: black;} "},"Inheritance":{"topic":"Inheritance","desc":"Allows sharing a set of CSS properties from one selector to another","syntax":"main selector { properties }\nanother selector {@extend main selector}","scss":".crows {color: red;}\n.bird {@extend .crows; margin: 3px;}","result":".crows, .bird {color: red;}\n.bird {margin: 3px;}"},"Mixins":{"topic":"Mixins","desc":"Contain reusable style groups","syntax":"@mixin myMixin { properties }\nselector { @include myMixin;}","scss":"@mixin blackish {color: black;}\np {@include blackish};","result":"p {color:black;}"},"Operations":{"topic":"Operations","desc":"Allows the use of standard math (+,-,*,/ and %) for units and colors","syntax":"($myVar + value)","scss":"$myVar: #f00;\np {color: ($myVar + #00f);}","result":"p {color: #f0f;}"},"Conditionals":{"topic":"Conditionals","desc":"Allows the use of conditionals","syntax":"$myVar:value;\n$myConditional: if($myVar=='value', #00f, #f00);\np {color: $myConditional;}","scss":"$myVar: crow;\n$myConditional = if($myVar=='crow', black, #f00);\np {color: $myConditional;}","result":"p {color: black;}"},"Arguments":{"topic":"Arguments","desc":"Allow injecting values in a mixin and can include default values","syntax":"@mixin .myMixin($a: default,$b: default,$c: default) { properties with $a, $b and $c}\n.myStyle { @include .myMixin(value, value, value);}","scss":"@mixin .myMixin($a:3px,$b:black,$c:1px) {\nmargin: $a;\ncolor: $b;\npadding: $c}\n\n.myClass {@include .myMixin(3px, blue);}","result":".myClass {margin: 3px; color: black; padding: 1px}"},"Functions":{"topic":"Functions","desc":"Are included to manipulate values","syntax":"function(value)","scss":"$blue : grayscale(blue);\np {color: $blue};","result":"p { color: gray; }"},"Imports and Partials":{"topic":"Imports and Partials","desc":"Allow including _partial.scss into the compiled css to support modularity","syntax":"@import 'file'","scss":"@import 'file';","result":"whatever was in _file.scss"}}